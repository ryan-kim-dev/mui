/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 -t public/models/WawaOffice.glb
*/

import * as THREE from 'three';
import React, { useLayoutEffect, useRef } from 'react';
import { gsap } from 'gsap';
import { useGLTF, useScroll } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { useFrame } from '@react-three/fiber';

type GLTFResult = GLTF & {
  nodes: {
    ['01_office']: THREE.Mesh;
    ['02_library']: THREE.Mesh;
    ['03_attic']: THREE.Mesh;
  };
  materials: {
    ['01']: THREE.MeshStandardMaterial;
    ['02']: THREE.MeshStandardMaterial;
    ['03']: THREE.MeshStandardMaterial;
  };
};

export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export function Office(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('./models/WawaOffice.glb') as GLTFResult;
  const ref: any = useRef();
  const tl: any = useRef();
  const libraryRef: any = useRef();
  const atticRef: any = useRef();

  const scroll = useScroll();

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });

  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // 수직방향 애니메이션 지정
    ref.current &&
      tl.current.to(
        ref.current.position,
        {
          duration: 2,
          y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
        },
        0
      );

    // 바닥 층 애니메이션
    tl.current.to(
      ref.current.rotation,
      {
        duration: 1,
        x: 0,
        y: Math.PI / 6,
        z: 0,
      },
      0
    );
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: -Math.PI / 6, z: 0 },
      1
    );

    // library 층 애니메이션
    tl.current.from(
      libraryRef.current.position,
      {
        duration: 0.5,
        x: -2,
      },
      0.5
    );
    // 층 회전
    tl.current.from(
      libraryRef.current.rotation,
      {
        duration: 0.5,
        y: -Math.PI / 2,
      },
      0
    );

    // attic 층 애니메이션
    tl.current.from(
      atticRef.current.position,
      {
        duration: 1.5,
        y: 2,
      },
      0
    );
    // 층 회전
    tl.current.from(
      atticRef.current.rotation,
      {
        duration: 0.5,
        y: Math.PI / 2,
      },
      1
    );
    tl.current.from(
      atticRef.current.position,
      {
        duration: 0.5,
        z: -2,
      },
      1.5
    );
  }, []);

  return (
    <group
      {...props}
      dispose={null}
      ref={ref}
      position={[0.5, -1, -1]}
      rotation={[0, -Math.PI / 3, 0]}
    >
      <mesh geometry={nodes['01_office'].geometry} material={materials['01']} />
      <group position={[0, 2.11, -2.23]}>
        <group ref={libraryRef}>
          <mesh
            geometry={nodes['02_library'].geometry}
            material={materials['02']}
          />
        </group>
      </group>
      <group position={[-1.97, 4.23, -2.2]}>
        <group ref={atticRef}>
          <mesh
            geometry={nodes['03_attic'].geometry}
            material={materials['03']}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('./models/WawaOffice.glb');
